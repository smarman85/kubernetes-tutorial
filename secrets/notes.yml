Secrets:
    - how to manage secrets using Kubernetes
    - Kubernetes allows you to create secrets that are mounted to a pod via environment variables
      or as a volume
    - Allows secrets, such as SSL certs or passwords, to only be managed via an infra team in a secure way
      instead of having teh passwords stored within the applicaions deployment artefacts
      # create a base64 strings and store them as variables in a file
      $ username=$(echo -n "admin" | base64)
      $ password=$(echo -n "a62fjbd37942dcs" | base64)
      # this will create a collection of key/value secrets that can be accessed via the name in 
      # this case test-secret
      $ echo "apiVersion: v1
        kind: Secret
        metadata:
          name: test-secret
        type: Opaque
        data:
          username: $username
          password: $password" >> secret.yaml
      $ kubectl create -f secret.yaml
      $ kubectl get secrets

Step 3 Consume via Env variables:
    - in the secret-env.yaml we defined a pod which has env vars populated from the previously created secret
      $ cat secret-env.yaml
    - to populate the env variable we define the name in this case SECRET_USERNAME along with the name of the secrets
      collection and the key which contains the data
      $ kubectl create -f secret-env.yaml
      $ kubectl exec -it secret-env-pod env | grep SECRET_


Step 4 Consume via Volumes:
  - env vars for secrets can accidentally leak
  - the recommended approach is to use mount them as a volume !!!!
  - pod spec in secret-pod.yaml
  - To mount the secrets as volumes we define a volume with a well known name
      - in this case, secret-volume, and provide it with our stored secret
        '
volumes:
 - name: secret-volume
   secret:
     secretName: test-secret
         '
    - when we define the counter we mount our created voluem to a particular directory
    - applications will read the secrets as files from this path
      '
volumeMounts:
  - name: secret-volume
    mountPath: /etc/secret-volume
        '
    $ kubeclt create -f secret-pod.yaml
    $ kubectl exec -it secret-vol-pod ls /etc/secret-volume
    $ kubectl exec -it secret-vol-pod cat /etc/secret-volume/username
    $ kubectl exec -it secret-vol-pod cat /etc/secret-volume/password



